name: Sort Lib

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  pre-commit:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - uses: actions/setup-python@v4.7.1
    - name: Install pre-commit
      run: |
        pip install pre-commit
    - name: Run pre-commit
      run: |
        pre-commit run --all-files

  linting:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Set up Python 3.9
        uses: actions/setup-python@v4.7.1
        with:
          python-version: '3.9'
      - name: Install tools
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements-dev.txt
      - name: Lint with black
        run: |
          python -m black . # add --diff or --check to make Black exit with a non-zero status code if any files would be reformatted, but not actually make any changes
      - name: Lint with flake8
        run: |
          python -m flake8 . --show-source --statistics

  test:
    needs: linting
    strategy:
      fail-fast: false
      matrix:
        python-version: ['3.9', '3.10']
        os: [ubuntu-latest, macos-latest, windows-latest]
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v4
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4.7.1
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements-dev.txt
      - name: Test with pytest
        run: |
          python -m pytest

  packaging:
    needs: test
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        python-version: ['3.9', '3.10']
        os: [ubuntu-latest, macos-latest, windows-latest]
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4.7.1
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          python -m pip install -r requirements-dev.txt
      - name: Build package
        run: |
          python -m build
          python -c "import shutil; shutil.move('dist', 'dist_${{ matrix.python-version }}_SEWDO')"
          python -c "import os; print('\n'.join(os.listdir('dist_${{ matrix.python-version }}_SEWDO')))"
      - name: Upload package
        if: github.event_name == 'push'
        uses: actions/upload-artifact@v3
        with:
          name: python-packages
          path: dist

  upload-to-testpypi:
      needs: packaging
      runs-on: ubuntu-latest
      steps:
        - uses: actions/checkout@v4
        - name: Set up Python 3.9
          uses: actions/setup-python@v4.7.1
          with:
            python-version: '3.10'
        - name: Install twine
          run: |
            python -m pip install --upgrade pip
            pip install twine
        - name: Upload to TestPyPI
          run: |
            python -m twine upload --repository-url https://test.pypi.org/legacy/ dist_${{ matrix.python-version }}_SEWDO"/*
